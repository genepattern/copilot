KMeansClustering is on version 1.0.
A description of KMeansClustering is K-Means clustering is a clustering algorithm that classifies or groups objects into a specified number of clusters. Initially, k cluster centroids (centers) are randomly selected from the given data set and each data point is assigned to the cluster of the nearest cluster center. Each cluster center is then recalculated to be the mean value of its members and all data points are re-assigned to the cluster with the closest centroid. This process is repeated until the distance between consecutive cluster centers converges. The KMeansClustering module can be used to cluster genes(rows) or samples(columns)..
KMeansClustering is a GenePattern module written by Marc-Danie Nazaire (Broad Institute), gp-help@broad.mit.edu.
KMeansClustering can be categorized as Clustering.
KMeansClustering has the following parameters: input.filename, output.base.name, number.of.clusters, seed.value, cluster.by, distance.metric.
The KMeansClustering module is a powerful tool for grouping similar data points in biological datasets.
The KMeansClustering module uses an unsupervised machine learning algorithm to partition data into a predefined number of clusters.
In gene expression analysis, the KMeansClustering module can help identify genes with similar expression patterns across different experimental conditions.
The KMeansClustering module allows researchers to cluster either genes (rows) or samples (columns) in a dataset, providing flexibility in data exploration.
The algorithm in the KMeansClustering module works by randomly selecting initial cluster centers and iteratively refining their positions until convergence.
Researchers can use the KMeansClustering module to discover underlying patterns in complex biological data that might not be immediately apparent.
The KMeansClustering module requires specifying the number of clusters in advance, which can be both a strength and a limitation of the method.
By setting a specific seed value in the KMeansClustering module, researchers can ensure reproducibility of their clustering results.
The KMeansClustering module currently supports Euclidean distance as the primary metric for calculating similarity between data points.
In microarray and RNA-seq data analysis, the KMeansClustering module can help group genes with similar expression profiles across different experimental conditions.
The KMeansClustering module outputs results in a standard .gct file format, making it compatible with many downstream bioinformatics tools.
Biologists can use the KMeansClustering module to identify co-regulated genes or samples with similar characteristics in large-scale genomic datasets.
The KMeansClustering module is particularly useful for exploratory data analysis in fields like cancer research, developmental biology, and systems biology.
input.filename: String, Required, Specifies the input dataset file for KMeansClustering module, can be in res, gct, or odf format
output.base.name: String, Required, Defines the base name for output files generated by KMeansClustering module, typically resulting in .gct files
number.of.clusters: Integer, Required, Determines the number of clusters to create in the KMeansClustering algorithm
seed.value: Integer, Optional, Controls the random number generator for reproducible results in KMeansClustering
cluster.by: String, Required, Specifies whether KMeansClustering will cluster rows or columns of the dataset
distance.metric: String, Optional, Defines the distance calculation method between data points, currently limited to Euclidean distance in KMeansClustering module
KMeansClustering module input file is a dataset in res, gct, or odf format containing numerical data for clustering.
KMeansClustering module input file must contain numerical values representing gene expression or other quantitative measurements.
KMeansClustering module input file can represent either gene (row) or sample (column) data depending on clustering preference.
KMeansClustering module output file is a .gct format file containing clustering results with assigned cluster membership.
KMeansClustering module output file includes original data with additional cluster assignment columns or rows.
KMeansClustering module generates a stdout.txt file capturing program execution details and computational logs.
KMeansClustering module requires input data to be numeric and compatible with Euclidean distance calculations.
KMeansClustering module allows specification of number of clusters as a user-defined parameter.
KMeansClustering module supports reproducible clustering through optional seed value specification.
KMeansClustering module can perform clustering on either rows (genes) or columns (samples) of the input dataset.
The KMeansClustering module is a computational method for grouping similar data points into a predefined number of clusters.
The KMeansClustering algorithm starts by randomly selecting k initial cluster centers from a dataset.
In KMeansClustering, each data point is assigned to the nearest cluster center based on a distance metric.
The KMeansClustering module recalculates cluster centers by computing the mean of all points within each cluster.
Data points are repeatedly reassigned to clusters with the closest centroid in the KMeansClustering process.
The KMeansClustering algorithm continues iterating until cluster centers converge and stop significantly changing.
Users can specify the number of clusters they want to create using the KMeansClustering module's "number.of.clusters" parameter.
The KMeansClustering module allows clustering either by rows (genes) or columns (samples) in a dataset.
A seed value can be set in the KMeansClustering module to ensure reproducibility of clustering results.
Currently, the KMeansClustering module only supports Euclidean distance as a metric for calculating point similarities.
The KMeansClustering module outputs results in a .gct file format, which is commonly used in genomic data analysis.
This implementation of KMeansClustering is written in Java and requires a Java Runtime Environment version 1.4 or higher.
The KMeansClustering algorithm was originally described by J. B. MacQueen in a 1967 statistical methods symposium.