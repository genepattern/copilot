NMFConsensus is on version 5.
A description of NMFConsensus is Non-negative Matrix Factorization Consensus Clustering. NMF is an unsupervised learning algorithm that identifies molecular patterns in gene expression data by detecting context-dependent patterns through matrix factorization..
NMFConsensus is a GenePattern module written by Pablo Tamayo (Broad Institute).
NMFConsensus can be categorized as Projection, Gene Expression.
NMFConsensus has the following parameters: dataset.filename, k.initial, k.final, num.clusterings, max.num.iterations, error.function, random.seed, output.file.prefix, stop.convergence, stop.frequency.
The NMFConsensus module is a powerful unsupervised machine learning technique for analyzing complex biological datasets.
NMFConsensus is a non-negative matrix factorization algorithm designed to identify molecular patterns in gene expression data.
Unlike traditional clustering methods, NMFConsensus detects context-dependent patterns by decomposing a data matrix into two non-negative matrices.
NMFConsensus can help researchers discover underlying biological structures and relationships in large-scale genomic datasets.
The module allows researchers to explore different numbers of potential clusters (k) by iteratively testing from an initial to a final k value.
NMFConsensus generates multiple consensus matrices and visualizations to help researchers understand the stability and structure of their data.
The algorithm is particularly useful for analyzing microarray data with thousands of genes and relatively few experimental conditions.
NMFConsensus can help identify molecular subtypes in complex diseases like cancer by revealing hidden patterns in gene expression data.
The module provides multiple output files, including membership results, cophenetic values, consensus matrices, and visualization plots.
Researchers can customize the NMFConsensus analysis by adjusting parameters like the number of iterations, error function, and convergence criteria.
The NMFConsensus module is implemented in R and can be used within the GenePattern computational genomics platform.
The algorithm is based on mathematical principles of non-negative matrix factorization developed by researchers like Lee and Seung.
NMFConsensus can help transform high-dimensional genomic data into more interpretable and biologically meaningful representations.
NMFConsensus module requires an input dataset filename for gene expression data, which can be in GCT or RES format.
The dataset.filename parameter is a string representing the input file path, and it is a required parameter for the NMFConsensus module.
k.initial specifies the starting number of clusters for the NMF algorithm, with a default value of 2 if not explicitly set.
k.initial is an integer parameter that determines the initial number of clusters to explore during the non-negative matrix factorization process.
k.final defines the maximum number of clusters to evaluate, with a default value of 5 if not specified.
k.final is an integer parameter that sets the upper limit of cluster configurations to be tested during the NMF consensus clustering.
num.clusterings determines how many individual clustering runs will be performed for each K value, with a default of 20 iterations.
num.clusterings is an integer parameter that controls the number of repeated clustering attempts to ensure robust results in the NMFConsensus module.
max.num.iterations sets the maximum number of iterations allowed for each clustering run, defaulting to 2000.
max.num.iterations is an integer parameter that limits the computational effort for each individual NMF clustering attempt.
error.function allows selection between divergence and euclidean distance metrics, with divergence as the default method.
error.function is a string parameter that determines the mathematical approach for measuring matrix factorization error in the NMFConsensus algorithm.
random.seed provides a seed for reproducible random number generation, with a default value of 123456789.
random.seed is an integer parameter that enables consistent initialization of matrix factorization across different runs of the NMFConsensus module.
output.file.prefix is a string parameter for customizing the naming convention of output files generated by the NMFConsensus module.
output.file.prefix allows users to specify a custom prefix for all output files, enhancing organization and identification of results.
stop.convergence determines the number of consecutive "no change" checks needed to halt NMF iterations, with a default of 40.
stop.convergence is an integer parameter that controls the convergence criteria for stopping matrix factorization iterations.
stop.frequency sets how often convergence checks are performed during NMF iterations, defaulting to every 10 iterations.
stop.frequency is an integer parameter that defines the interval between convergence assessment checks in the NMFConsensus algorithm.
NMFConsensus module input file: dataset.filename is a gene expression matrix in GCT or RES format containing non-negative numerical values representing gene expression levels across multiple samples.
NMFConsensus module input file: dataset.filename typically contains genes as rows and samples/experiments as columns with numerical expression measurements.
NMFConsensus module input file: dataset.filename should have a header row specifying column names and a first column identifying gene names or identifiers.
NMFConsensus module output file: membership.gct contains sample membership results across different clustering values of K, showing how samples are grouped.
NMFConsensus module output file: cophenetic.txt stores numerical cophenetic correlation values for each clustering value of K, indicating clustering stability.
NMFConsensus module output file: cophenetic.plot.pdf visualizes cophenetic correlation values graphically to help determine optimal number of clusters.
NMFConsensus module output file: consensus.k.#.gct represents consensus matrix for specific clustering value K, showing co-clustering probabilities between samples.
NMFConsensus module output file: consensus.plot.k#.pdf provides a graphical visualization of the consensus matrix for a specific K value.
NMFConsensus module output file: graphs.k#.pdf contains multiple plots including ordered consensus matrix, linkage tree, NMF convergence, W and H matrices, and metagene representations.
NMFConsensus is an unsupervised machine learning algorithm for dimensionality reduction in gene expression data.
NMFConsensus uses non-negative matrix factorization to detect context-dependent molecular patterns in complex biological systems.
The NMFConsensus algorithm breaks down a large gene expression matrix into two smaller matrices (W and H) with non-negative entries.
NMFConsensus iteratively updates W and H matrices to minimize the distance between the original data matrix and the reconstructed matrix.
For DNA microarray data, NMFConsensus typically handles thousands of genes and fewer than a hundred experiments.
NMFConsensus can use two error functions: Euclidean distance or divergence norm for matrix factorization.
The algorithm computes row and column factor memberships based on maximum amplitudes in the factorized matrices.
NMFConsensus allows users to specify initial and final values for the number of clusters (K) and the number of clustering iterations.
The module generates multiple output files including membership results, cophenetic values, consensus matrices, and visualization plots.
NMFConsensus is computationally intensive, with a sample run on an ALL AML dataset taking approximately 2.2 hours on a 1.8GHz processor.
The algorithm is based on seminal works by Lee and Seung on non-negative matrix factorization for pattern recognition.
NMFConsensus is implemented in R and can run on any CPU and operating system with R 2.5 installed.
Users can set a random seed to ensure reproducibility of clustering results across different runs.
The module provides flexibility in stopping criteria, allowing users to define convergence checks and iteration frequencies.
NMFConsensus is particularly useful for exploring molecular substructures in complex genomic datasets.